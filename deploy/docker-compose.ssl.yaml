# SSL扩展配置 - 与主配置合并使用
# 使用方法: docker-compose -f docker-compose.yaml -f docker-compose.ssl.yaml up -d

services:
  # SSL反向代理（替换原proxy服务）
  proxy-ssl:
    image: docker.m.daocloud.io/nginx:alpine
    container_name: api-proxy-ssl-gateway
    restart: unless-stopped
    ports:
      - "80:80" # HTTP (重定向和ACME验证)
      - "443:443" # HTTPS
    volumes:
      - ./nginx-ssl.conf:/etc/nginx/nginx.conf:ro
      - ssl_certs:/etc/nginx/ssl:ro
      - webroot:/var/www/certbot:rw
    networks:
      - api-proxy-network
    depends_on:
      - frontend
      - backend
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - TZ=Asia/Shanghai

  # Certbot证书管理服务（可选，用于调试和手动操作）
  certbot:
    image: docker.m.daocloud.io/certbot/certbot:latest
    container_name: api-proxy-certbot
    volumes:
      - ssl_certs:/etc/letsencrypt
      - webroot:/var/www/certbot
    networks:
      - api-proxy-network
    profiles:
      - certbot # 仅在需要时启用: --profile certbot
    environment:
      - TZ=Asia/Shanghai
    command: >
      sh -c "
      echo '等待nginx启动...' &&
      sleep 30 &&
      certbot certonly
      --webroot
      --webroot-path=/var/www/certbot
      --email admin@zhanglei.vip
      --agree-tos
      --no-eff-email
      --keep-until-expiring
      --expand
      -d domain.com
      "

# 新增卷定义
volumes:
  # SSL证书存储
  ssl_certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ssl

  # ACME验证文件
  webroot:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/webroot

# 网络配置（继承主配置）
networks:
  api-proxy-network:
    external: true
