# AI代理平台前端 Dockerfile
# 多阶段构建：构建阶段 + 运行阶段

# --------------------------------
# 构建阶段 - 通用构建，无环境变量依赖
# --------------------------------
FROM docker.m.daocloud.io/node:18-alpine as builder

# 设置工程信息
LABEL maintainer="AI Proxy Team"
LABEL description="AI代理平台前端 - 通用构建版本"

# 设置工作目录
WORKDIR /app

# 复制package配置文件
COPY frontend/package*.json ./

# 安装依赖
RUN npm ci --only=production=false

# 复制源代码
COPY frontend/ ./

# 构建项目
RUN npm run build:prod

# --------------------------------
# 运行阶段 - Nginx + 运行时配置注入
# --------------------------------
FROM docker.m.daocloud.io/nginx:alpine

# 安装必要工具
RUN apk add --no-cache \
    curl \
    bash \
    sed \
    grep

# 复制构建结果到nginx目录
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制nginx配置文件
COPY deploy/nginx.conf /etc/nginx/nginx.conf

# 复制启动脚本
COPY deploy/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# 创建nginx用户目录
RUN mkdir -p /var/cache/nginx/client_temp \
    && mkdir -p /var/cache/nginx/proxy_temp \
    && mkdir -p /var/cache/nginx/fastcgi_temp \
    && mkdir -p /var/cache/nginx/uwsgi_temp \
    && mkdir -p /var/cache/nginx/scgi_temp

# 设置权限 - 确保所有目录存在并设置权限
RUN chown -R nginx:nginx /var/cache/nginx \
    && chown -R nginx:nginx /usr/share/nginx/html \
    && chown -R nginx:nginx /var/log/nginx \
    && chmod -R 755 /var/cache/nginx \
    && chmod -R 755 /usr/share/nginx/html \
    && chmod -R 755 /var/log/nginx

# 为了解决权限问题，暂时以root运行nginx
# USER nginx

# 暴露端口
EXPOSE 80

# 设置环境变量默认值
ENV VITE_API_BASE_URL=http://localhost:9090/api
ENV VITE_WS_URL=ws://localhost:9090/ws
ENV VITE_APP_VERSION=1.0.0
ENV VITE_LOG_LEVEL=info

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost/health || curl -f http://localhost/ || exit 1

# 使用启动脚本启动（支持运行时配置注入）
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]