# AI代理平台前端 Dockerfile
# 多阶段构建：构建阶段 + 运行阶段

# ================================
# 构建阶段
# ================================
FROM docker.m.daocloud.io/node:18-alpine as builder

# 接收构建参数
ARG VITE_API_BASE_URL
ARG VITE_WS_URL

# 设置环境变量
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL}
ENV VITE_WS_URL=${VITE_WS_URL}

# 设置工作目录
WORKDIR /app

# 复制package配置文件
COPY frontend/package*.json ./

# 安装依赖
RUN npm ci --only=production=false

# 复制源代码
COPY frontend/ ./

# 构建项目
RUN npm run build:prod

# ================================
# 运行阶段 - Nginx
# ================================
FROM docker.m.daocloud.io/nginx:alpine

# 安装curl用于健康检查
RUN apk add --no-cache curl

# 复制构建结果到nginx目录
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制nginx配置文件（从根目录开始）
COPY deploy/nginx.conf /etc/nginx/nginx.conf

# 创建nginx用户目录
RUN mkdir -p /var/cache/nginx/client_temp \
    && mkdir -p /var/cache/nginx/proxy_temp \
    && mkdir -p /var/cache/nginx/fastcgi_temp \
    && mkdir -p /var/cache/nginx/uwsgi_temp \
    && mkdir -p /var/cache/nginx/scgi_temp

# 设置权限 - 确保所有目录存在并设置权限
RUN chown -R nginx:nginx /var/cache/nginx \
    && chown -R nginx:nginx /usr/share/nginx/html \
    && chown -R nginx:nginx /var/log/nginx \
    && chmod -R 755 /var/cache/nginx \
    && chmod -R 644 /usr/share/nginx/html \
    && chmod -R 755 /var/log/nginx

# 切换到非root用户
USER nginx

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]