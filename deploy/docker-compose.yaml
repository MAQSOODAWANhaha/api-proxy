# AI代理平台 Docker Compose 配置 - 统一部署版本

services:
  # ================================
  # 统一代理服务 (前后端合并)
  # ================================
  proxy:
    image: gghtrt520/api-proxy:latest
    container_name: api-proxy-service
    restart: unless-stopped
    ports:
      - "127.0.0.1:9090:9090" # 统一服务端口（API + 静态文件）
      - "127.0.0.1:8080:8080" # 重定向端口（可选）
    volumes:
      # 数据持久化
      - proxy_data:/app/data
      - proxy_logs:/app/logs
      # TLS证书（如果需要外部证书）
      - ./certs:/app/certs:ro
      # 配置文件（可选，用于动态配置）
      - ./config:/app/config:ro
    environment:
      - RUST_LOG=info
      - RUST_BACKTRACE=1
      - API_PROXY_CONFIG_PATH=/app/config/${CONFIG_FILE:-config.prod.toml}
      - API_PROXY_DATA_DIR=/app/data
      - API_PROXY_STATIC_DIR=/app/static
      - DATABASE_URL=sqlite:///app/data/api-proxy.db
    networks:
      - api-proxy-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ================================
  # Caddy 反向代理和SSL终端
  # ================================
  caddy:
    image: docker.m.daocloud.io/caddy:2.8-alpine
    container_name: api-proxy-caddy
    restart: unless-stopped
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS (避免与k8s Traefik冲突)
      - "8443:8443" # HTTPS (8443端口)
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./certs:/etc/caddy/certs:ro
      - caddy_data:/data
      - caddy_config:/config
      - ./logs/caddy:/var/log/caddy
    environment:
      - DOMAIN=${DOMAIN:-example.com}
      - CERT_EMAIL=${CERT_EMAIL:-admin@example.com}
      - PROXY_HOST=proxy
      - PROXY_PORT_9090=9090
      - PROXY_PORT_8080=8080
    networks:
      - api-proxy-network
    depends_on:
      - proxy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:2019/config/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # ================================
  # Redis缓存服务
  # ================================
  redis:
    image: docker.m.daocloud.io/redis:7.2-alpine
    container_name: api-proxy-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - api-proxy-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

# ================================
# 数据卷定义
# ================================
volumes:
  proxy_data:
    driver: local
  proxy_logs:
    driver: local
  redis_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

# ================================
# 网络定义
# ================================
networks:
  api-proxy-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
