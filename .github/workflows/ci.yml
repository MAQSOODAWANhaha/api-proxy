name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install additional tools
      run: |
        cargo install cargo-audit
        cargo install cargo-tarpaulin
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Security audit
      run: cargo audit
    
    - name: Run tests
      run: cargo test --all-features --verbose
      env:
        REDIS_URL: redis://localhost:6379
    
    - name: Generate coverage report
      run: cargo tarpaulin --all-features --out xml --timeout 120
      env:
        REDIS_URL: redis://localhost:6379
    
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v3
      with:
        file: cobertura.xml
        fail_ci_if_error: true

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Check Rust formatting
      run: cargo fmt --all -- --check
    
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Build project
      run: cargo build --release --all-features
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: api-proxy-binary
        path: target/release/api-proxy
        retention-days: 30

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Run integration tests
      run: cargo test --test integration_tests --all-features
      env:
        REDIS_URL: redis://localhost:6379